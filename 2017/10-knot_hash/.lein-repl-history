(require '[clojure-test :refer [run-tests]])
(require '[clojure.test :refer [run-tests]])
(require 'knot-hash.core-test)
(run-tests 'knot-hash.core-test)
(require '[clojure-test :refer [run-tests]])
(step '(1 2 3))
(step '(1 2 3) '(2 3 4))
(reload)
(reset)
(use 'knot-hash.core :reload)
(step '(1 2 3) '(2 3 4))
(use 'knot-hash.core :reload)
(step '(1 2 3) '(2 3 4))
(use 'knot-hash.core :reload)
(step '(1 2 3) '(2 3 4))
(require '[clojure.test :refer [run-tests]])
(require 'your-ns.example-test)
(require 'clojure.test :refer [run-tests])
(require [clojure.test :refer [run-tests]])
(require '[clojure.test :refer [run-tests]])
(require 'knot-hash.core-test)
(run-tests 'knot-hash.core-test)
(= '(1 2 3) '(1 2 3))
(= '(1 2 3) '(1 2 4))
'(1 2 3)
(head '(1 2 3))
(first '(1 2 3))
(rest '(1 2 3))
('(1 2 3))
'(1 2 3)
(reverse '(1 2 3))
(concat '(1 2 3))
(concat '(1 2 3) '(4 5 6))
(concat (reverse '(1 2 3)) '(4 5 6))
(let a '(1 2 3 4 5 6))
(let [a '(1 2 3 4 5 6])
(defn f [] '(1 2 3 4 5 6))
(f)
(reverse (take 3 f))
(reverse (take 3 (f)))
(run-tests)
:w
(require 'knot-hash.core-test)
(run-tests 'knot-hash.core-test)
(use-ns 'knot-hash.core :reload)
(use 'knot-hash.core :reload)
(run-tests 'knot-hash.core-test)
(step '(1 2 3 4 5 6) '(1 2 3))
(use 'knot-hash.core :reload)
(run-tests 'knot-hash.core-test)
(step '(1 2 3 4 5 6) '(1 2 3))
(step '(1 2 3 4 5 6) '(2 2 3))
